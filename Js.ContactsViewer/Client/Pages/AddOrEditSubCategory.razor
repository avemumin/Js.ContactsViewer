@page "/subcategory"
@page "/subcategory/{Id:int}"
@inject ISubCategoryService _subCategoryService
@inject NavigationManager _navigationManager

@if (Id == null)
{
    <PageTitle>Dodaj podkategorię</PageTitle>
    <h3>Utwórz:</h3>
}
else
{
    <PageTitle>Edytuj podkategorię</PageTitle>
    <h3>Edycja:</h3>
}

<EditForm Model="SubCategory" OnSubmit="HandleSubmit">
    <div>
        <label for="subcatname"><strong>Nazwa:</strong></label>
        <InputText id="subcatname" @bind-Value="SubCategory.SubCatName" class="form-control" placeholder="podaj nazwę podkategorii" />
    </div>
    <br />
    <div>
        <label for="subcatdescription"><strong>Opis:</strong></label>
        <InputText id="subcatdescription" @bind-Value="SubCategory.SubCatDescription" class="form-control" placeholder="dodaj opis" />
    </div>
    <br />
    <button type="submit" class="btn btn-primary">Zapisz</button>
    <br />
    <button type="button" class="btn-secondary" @onclick="GoBack">Wróć</button>
</EditForm>




@code {
    [Parameter] public int? Id { get; set; }
    SubCategory SubCategory = new SubCategory();


    protected override async Task OnInitializedAsync()
    {
        if (Id == null)
        {
            SubCategory = new SubCategory();
        }
        else
        {
            await _subCategoryService.GetSubCategoryById((int)Id);
            if (_subCategoryService.SubCategory != null)
                SubCategory = _subCategoryService.SubCategory;
        }
    }
    async Task HandleSubmit()
    {
        if (Id == null)
        {
            await _subCategoryService.CreateSubCategory(SubCategory);
            GoBack();
        }
        else
        {
            await _subCategoryService.UpdateSubCategory(SubCategory);
            GoBack();
        }
    }

    void GoBack()
    {
        _navigationManager.NavigateTo("/subcategories");
    }
}
