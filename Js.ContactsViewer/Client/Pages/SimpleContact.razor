@page "/contact"
@page "/contact/{id:int}"

@inject IContactService _contactService
@inject ICategoryService _categoryService
@inject ISubCategoryService _subCategoryService
@inject NavigationManager _navigationManager

<CreateOrEditComponent Id="Id" Email="@contact.Email" />


<EditForm Model="contact">
    <div>
        <label for="firstname"><strong>Imię:</strong></label>
        <InputText id="firstname" @bind-Value="contact.Name" class="form-control" placeholder="imię" />
    </div>
    <br />
    <div>
        <label for="lastname"><strong>Nazwisko:</strong></label>
        <InputText id="lastname" @bind-Value="contact.LastName" class="form-control" placeholder="nazwisko" />
    </div>
    <br />
    <div>
        <label for="email"><strong>Email:</strong></label>
        <InputText id="email" @bind-Value="contact.Email" class="form-control" placeholder="adres email" />
    </div>
    <br />
    <div>
        <label for="phone"><strong>Telefon:</strong></label>
        <InputText id="phone" @bind-Value="contact.Phone" class="form-control" placeholder="numer telefonu" />
    </div>
    <br />
    <div>
        <label for="birthdate"><strong>Data urodzenia:</strong></label>
        <InputDate id="birthdate" @bind-Value="contact.BirthDay" class="form-control" />
    </div>
    <br />


    <div class="flex-row" style="margin:10px">

        <button type="submit" class="btn btn-success" style="margin:10px" @onclick="(()=>AddNewContact(contact))">@btnText</button>

        @if (Id != null)
        {
            <button type="button" class="btn btn-warning" style="margin:10px" @onclick="(()=>DeleteSelecedContact(contact))">Usuń</button>
        }
        <button type="button" class="btn btn-secondary" style="margin:10px" @onclick="GoBack">Wróć</button>

    </div>
</EditForm>

<ChoiceComponent @ref="_choice" OnAccept="Accept" OnCancel="Cancel">
    <div> Czy usunąć kontakt @_contactToRemove?.Email ?</div>
</ChoiceComponent>

@code {
    [Parameter] public int? Id { get; set; }
    ChoiceComponent? _choice;
    Contact? _contactToRemove;
    Contact contact = new Contact { Category = new Category(), SubCategory = new SubCategory() };
    string btnText = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        btnText = Id == null ? "Dodaj" : "Zapisz zmiany";
        await _categoryService.GetCategories();
        await _subCategoryService.GetSubCategories();
    }

    protected override async Task OnParametersSetAsync()
    {
        if (Id == null)
        {
            contact.Category = _categoryService.Categories[1];
            contact.CategoryId = contact.Category.Id;

           contact.SubCategory = _subCategoryService.SubCategories[0];
           contact.SubCategoryId = contact.SubCategory.Id;
        }
        else
        {
            contact = await _contactService.GetContactById((int)Id);
        }
    }

    void GoBack()
    {
        GoToPreviousSite();
    }
    private void DeleteSelecedContact(Contact? contactSelected)
    {
        _contactToRemove = contactSelected;
        _choice?.Show();
    }
    private void Accept()
    {
        //Categories.Remove(_categoryToRemove);
        _choice?.Hide();
        _contactToRemove = null;
        GoToPreviousSite();
    }
    private void Cancel()
    {
        _choice?.Hide();
        _contactToRemove = null;
    }

    private void AddNewContact(Contact? contactToAdd)
    {
        GoToPreviousSite();
    }

    private void GoToPreviousSite()
    {
        _navigationManager.NavigateTo("/contacts");
    }
}


@*Komentarz:
 Aby wykorzystać jedną formatkę do kilku zadań w tym wypadku
 dodawanie kontaktu oraz edycji wykorzystamy opcje rutingu dla strony
 po stronie klienta @page "/nazwa" gdy chcemy dodac oraz @page "/nazwa/{id:int}" konkretnie wskazane
 id kontaktu (z określonym typem).
 Wiem margin:10 nie jest dobrym pomysłem w tym miejscu powinien być jak już w pliku css ale ...
 Tutaj wywołujemy formatkę ChoiceComponent za pomocą referencji do niej
 i przekazujemy informacje o obiekcie który chcemy w tym wypadku usunąć
 następnie obsługujemy akcjie Accept/Cancel zdecydowałem się na ten wariant
 bo bardziej mi się podoba niz wywołanie javascriptu i wołanie funkcji pokroju alert
 ale też się da trzeba by dopisać jakąś metodę rozszerzającą i ją wywałać na akcji kliknięcia
 *@